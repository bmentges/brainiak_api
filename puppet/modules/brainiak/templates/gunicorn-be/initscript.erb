#!/bin/sh
#
# chkconfig:    2345 85 15
# description:  <%=servico%>

#################################################################################
# ARQUIVO GERENCIADO PELO PUPPET                                                #
# AS ALTERACOES MANUAIS SERAO DESCARTADAS NA PROXIMA ATUALIZACAO DO PUPPET      #
<% if has_variable?("git_projeto") then %># Git do Projeto que usou esse template: <%=git_projeto%><% end %>
# Template em <%=app_name%>/modules/<%=app_name%>/templates/gunicorn-be/initscript.erb #
#################################################################################

# Source function library.
. <%=el5_file%>

<% if has_variable?('api_dbpasswd_conf_file') then %>
# Importo o arquivo q contem a senha do filer
. /opt/etc/scripts/initfunctions.sh
LoadProtectedEnviron --uid=10000 <%=api_dbpasswd_conf_file%>
<% end %>

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

# Defines.
user="<%=instancia_usuario%>"
command="<%=python_prefix%>/bin/<%=gunicorn_bin%>"
prog="$(basename $command)"
config="<%=config_file%>"
logconfig="<%=logconfig_file%>"
app_dir="<%=app_dir%>"
settings="<%=settings_file%>"
title="<%=servico%>"
pidfile="<%=pid_file%>"
logfile="<%=log_file%>"

command_parameters="-c $config -k tornado brainiak.server:application"

# Commands.
start_command="cd $app_dir && $command $command_parameters >> $logfile 2>&1"

# Signals.
# http://gunicorn.org/faq.html#how-do-i-reload-my-application-in-gunicorn
stop_signal="TERM"
graceful_signal="HUP"
reload_signal="HUP"

# Return code.
RETVAL=0

PreFlight()
{
    if [[ ! -d "${app_dir}" ]] ; then
        echo -n "Não consigo achar diretório '${app_dir}'"
        failure
        exit 1
    fi

    export DJANGO_SETTINGS_MODULE="${settings}"
    export PYTHONPATH="${app_dir}${PYTHONPATH:+:${PYTHONPATH}}"
}


function checkProcessIsRunning()
{
   local pid="$1"
   if [ -z "$pid" -o "$pid" == " " ]; then return 1; fi
   if [ ! -e /proc/$pid ]; then return 1; fi
   return 0;
}

start() {
    echo -n "Starting $title:"
    PreFlight
    <%if daemon_as_root-%>
    daemon --pidfile $pidfile $start_command
    <%else-%>
    daemon --pidfile $pidfile --user $user $start_command
    <%end-%>
    RETVAL=$?
    sleep 2
    if [ ! -f $pidfile ]; then pid="0000000000"; else pid="$(<$pidfile)";fi
    if checkProcessIsRunning $pid; then :; else
        failure
        echo
        RETVAL=1
        if [ -f $pidfile ]; then rm $pidfile;fi
        return 1
    fi
    echo
    return $RETVAL
}

stop() {
    echo -n "Stopping $title:"
    killproc -p $pidfile -d 5 $prog -${1:-$stop_signal}
    RETVAL=$?
    echo
    return $RETVAL
}

force_stop() {
    stop "KILL"
}

restart() {
    echo "Restarting $title:"
    stop
    sleep <%=sleeprestart%>
    start
}

force_restart() {
    echo "Restarting (force) $title:"
    sleep <%=sleeprestart%>
    stop "KILL"
    sleep 5
    start
}

graceful() {
    echo -n "Gracefuling $title:"
    sleep <%=sleeprestart%>
    killproc -p $pidfile $prog -$graceful_signal
    RETVAL=$?
    echo
    return $RETVAL
}

reload() {
    echo -n "Reloading $title:"
    sleep <%=sleeprestart%>
    killproc -p $pidfile $prog -$reload_signal
    RETVAL=$?
    echo
    return $RETVAL
}

rh_status() {
    status -p $pidfile $prog
    RETVAL=$?
    [ $RETVAL -eq 0 ] && success || failure
    echo
    return $RETVAL
}

rh_status_q() {
    rh_status >/dev/null 2>&1
    RETVAL=$?
    return $RETVAL
}

case "$1" in
    start)
        rh_status_q && exit 0
        start
        ;;
    stop)
        rh_status_q || exit 0
        stop
        ;;
    force-stop)
        force_stop
        ;;
    restart)
        restart
        ;;
    force-restart)
        force_restart
        ;;
    graceful)
        rh_status_q && graceful || restart
        ;;
    reload)
        rh_status_q || exit 1
        reload
        ;;
    status)
        rh_status
        ;;
    *)
        echo "Usage: $0 {start|stop|force-stop|restart|force-restart|graceful|reload|status}"
        exit 1
esac

exit $RETVAL
